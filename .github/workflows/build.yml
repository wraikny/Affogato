name: CI

on:
  push:
    branches:
      - master
      - workflows
    tags:
      - '*'
  pull_request:

jobs:
  build:

    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
        dotnet: [2.2.402]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Build
      if: runner.os != 'Windows'
      run: ./build.sh
      env:
        # Work around https://github.com/actions/setup-dotnet/issues/29
        DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        CI: true

    # - name: Build (Windows)
    #   if: runner.os == 'Windows'
    #   run: ./build.cmd
    #   env:
    #     # Work around https://github.com/actions/setup-dotnet/issues/29
    #     DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
    #     CI: true

    - name: Test
      run: dotnet fake build -t Test

    - name: Package
      if: startsWith(github.ref, 'refs/tags/')
      run: dotnet fake build -t Zip

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: "./dist/**"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Package for Nuget
      if: startsWith(github.ref, 'refs/tags/v')
      run: dotnet fake build -t Pack

    # - name: Nuget
    #   if: startsWith(github.ref, 'refs/tags/v')
    #   run: dotnet nuget push output/packages/*.nupkg -k $NUGET_OLG_API_KEY -s https://api.nuget.org/v3/index.json
    #   env:
    #     NUGET_OLG_API_KEY: ${{ secrets.NUGET_OLG_API_KEY }}
